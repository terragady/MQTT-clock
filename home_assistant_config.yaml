# Home Assistant Configuration for MQTT Clock

# Add to your configuration.yaml

mqtt:
  text:
    - name: "MQTT Clock Notification"
      command_topic: "clock/zegarTV/notification"
      availability_topic: "clock/zegarTV/status"
      max: 100

  number:
    - name: "Clock Day Brightness"
      command_topic: "clock/zegarTV/brightness/day"
      state_topic: "clock/zegarTV/status"
      value_template: "{{ value_json.day_brightness }}"
      min: 0
      max: 15

    - name: "Clock Night Brightness"
      command_topic: "clock/zegarTV/brightness/night"
      state_topic: "clock/zegarTV/status"
      value_template: "{{ value_json.night_brightness }}"
      min: 0
      max: 15

    - name: "Clock Day Start Hour"
      command_topic: "clock/zegarTV/schedule/day_start"
      state_topic: "clock/zegarTV/status"
      value_template: "{{ value_json.day_start_hour }}"
      min: 0
      max: 23

    - name: "Clock Night Start Hour"
      command_topic: "clock/zegarTV/schedule/night_start"
      state_topic: "clock/zegarTV/status"
      value_template: "{{ value_json.night_start_hour }}"
      min: 0
      max: 23

  sensor:
    - name: "Clock Status"
      state_topic: "clock/zegarTV/status"
      value_template: "{{ value_json.status }}"

    - name: "Clock Current Time"
      state_topic: "clock/zegarTV/status"
      value_template: "{{ value_json.current_time }}"

    - name: "Clock Day/Night Mode"
      state_topic: "clock/zegarTV/status"
      value_template: "{% if value_json.is_day_time %}Day{% else %}Night{% endif %}"

# Example automation for sending notifications
automation:
  - alias: "Send notification to clock"
    trigger:
      - platform: state
        entity_id: binary_sensor.front_door # Example trigger
        to: "on"
    action:
      - service: mqtt.publish
        data:
          topic: "clock/zegarTV/notification"
          payload: "Front door opened!"

  - alias: "Doorbell notification to clock"
    trigger:
      - platform: state
        entity_id: binary_sensor.doorbell
        to: "on"
    action:
      - service: mqtt.publish
        data:
          topic: "clock/zegarTV/notification"
          payload: "DOORBELL"

# Script for manual notification testing
script:
  send_clock_notification:
    alias: "Send Clock Notification"
    fields:
      message:
        description: "Message to display on clock"
        example: "Hello World!"
        default: "Test message"
        selector:
          text:
    sequence:
      - service: mqtt.publish
        data:
          topic: "clock/zegarTV/notification"
          payload: "{{ message }}"

  # Advanced notification examples
  send_advanced_notification:
    alias: "Send Advanced Notification"
    fields:
      message:
        description: "Message to display"
        example: "Hello World!"
        default: "Test message"
        selector:
          text:
      scrolling:
        description: "Scrolling or static display"
        default: true
        selector:
          boolean:
      repeat:
        description: "How many times to scroll (1-10)"
        default: 1
        selector:
          number:
            min: 1
            max: 10
      speed:
        description: "Scroll speed in ms (5-100, lower=faster)"
        default: 35
        selector:
          number:
            min: 5
            max: 100
      brightness:
        description: "Notification brightness (-1=current, 0-15)"
        default: -1
        selector:
          number:
            min: -1
            max: 15
      time:
        description: "Static display time in ms (1000-30000)"
        default: 5000
        selector:
          number:
            min: 1000
            max: 30000
            step: 500
      flash:
        description: "Flash effect (static notifications only)"
        default: false
        selector:
          boolean:
      flash_count:
        description: "Number of flashes (1-10) - speed auto-calculated"
        default: 3
        selector:
          number:
            min: 1
            max: 10
    sequence:
      - service: mqtt.publish
        data:
          topic: "clock/zegarTV/notification"
          payload: >
            {
              "message": "{{ message }}",
              "scrolling": {{ scrolling | lower }},
              "repeat": {{ repeat }},
              "speed": {{ speed }},
              "brightness": {{ brightness }},
              "time": {{ time }},
              "flash": {{ flash | lower }},
              "flash_count": {{ flash_count }}
            }

  # Quick notification scripts with advanced features
  send_doorbell_alert:
    alias: "Send Doorbell Alert"
    sequence:
      - service: mqtt.publish
        data:
          topic: "clock/zegarTV/notification"
          payload: >
            {
              "message": "🔔 DOORBELL",
              "scrolling": false,
              "brightness": 15,
              "time": 8000,
              "flash": true,
              "flash_count": 5
            }

  send_mail_alert:
    alias: "Send Mail Alert"
    sequence:
      - service: mqtt.publish
        data:
          topic: "clock/zegarTV/notification"
          payload: >
            {
              "message": "📬 Mail Delivered",
              "scrolling": true,
              "repeat": 2,
              "speed": 25,
              "brightness": 10
            }

  send_security_alert:
    alias: "Send Security Alert"
    sequence:
      - service: mqtt.publish
        data:
          topic: "clock/zegarTV/notification"
          payload: >
            {
              "message": "⚠️ SECURITY ALERT",
              "scrolling": false,
              "brightness": 15,
              "time": 10000,
              "flash": true,
              "flash_count": 10
            }

  send_gentle_reminder:
    alias: "Send Gentle Reminder"
    sequence:
      - service: mqtt.publish
        data:
          topic: "clock/zegarTV/notification"
          payload: >
            {
              "message": "Take a break",
              "scrolling": true,
              "repeat": 1,
              "speed": 50,
              "brightness": 5,
              "flash": false
            }

  send_emergency_alert:
    alias: "Send Emergency Alert"
    sequence:
      - service: mqtt.publish
        data:
          topic: "clock/zegarTV/notification"
          payload: >
            {
              "message": "🚨 EMERGENCY",
              "scrolling": false,
              "brightness": 15,
              "time": 15000,
              "flash": true,
              "flash_count": 20
            }
